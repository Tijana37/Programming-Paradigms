{:ime "TIJANA" :prezime "ATANASOVSKA" :index "196014"}

(ns user (:use clojure.test))

;1) transform-helper

(deftest test-transform-helper
(is (= [#{1} #{2} #{1 2 3 4 5 6 7 8 9}] (transform-helper [1 2 0]))) ;If the zero is last
(is (= [#{1 2 3 4 5 6 7 8 9} #{2} #{1}] (transform-helper [0 2 1]))) ;If the zero is first
(is (= [#{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9}] (transform-helper [0 0 0]))) ;all zeros
(is (= [#{1} #{2} #{3}] (transform-helper [1 2 3]))) ;no zero
(is (= [#{1} #{2} #{1 2 3 4 5 6 7 8 9} #{7} #{1 2 3 4 5 6 7 8 9} #{4} #{9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9}] (transform-helper [1 2 0 7 0 4 9 0 0]))) ;Testing sudoku row
 )

;2) transform

(deftest test-transform
(is (=  (transform [[0 2 5 0 0 1 0 0 0]
         [1 0 4 2 5 0 0 0 0]
         [0 0 6 0 0 4 2 1 0]
         [0 5 0 0 0 0 3 2 0]
         [6 0 0 0 2 0 0 0 9]
         [0 8 7 0 0 0 0 6 0]
         [0 9 1 5 0 0 6 0 0]
         [0 0 0 0 7 8 1 0 3]
         [0 0 0 6 0 0 5 9 0]

         ])
        [[#{1 2 3 4 5 6 7 8 9} #{2} #{5} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9}]
         [#{1} #{1 2 3 4 5 6 7 8 9} #{4} #{2} #{5} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9}]
         [#{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{6} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{4} #{2} #{1} #{1 2 3 4 5 6 7 8 9}]
         [#{1 2 3 4 5 6 7 8 9} #{5} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{3} #{2} #{1 2 3 4 5 6 7 8 9}]
         [#{6} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{2} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{9}]
         [#{1 2 3 4 5 6 7 8 9} #{8} #{7} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{6} #{1 2 3 4 5 6 7 8 9}]
         [#{1 2 3 4 5 6 7 8 9} #{9} #{1} #{5} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{6} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9}]
         [#{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{7} #{8} #{1} #{1 2 3 4 5 6 7 8 9} #{3}]
         [#{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{6} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{5} #{9} #{1 2 3 4 5 6 7 8 9}]]))
  )

;3) get-row

(deftest test-get-row
(is (= [1 0 4 2 5 0 0 0 0] (get-row [[0 2 5 0 0 1 0 0 0]
         [1 0 4 2 5 0 0 0 0]] 2))
  ))

;4) get-element-in-row

(deftest test-get-element-in-row
(is (= 2 (get-element-in-row [0 2 5 0 0 1 0 0 0] 2))
  ))

;5) get-element-in-matrix
(deftest test-get-element-in-matrix
(is (= 1 (get-element-in-matrix [[0 2 5 0 0 1 0 0 0]
         [1 0 4 2 5 0 0 0 0]] 2 1))
  ))

;6) clean-row
(deftest test-clean-row
(is (= [#{2 3} #{2} #{1}] (clean-row  [#{1 2 3} #{2} #{1}] #{1})))
(is (= [#{2 3} #{2} #{1}] (clean-row  [#{2 3} #{2} #{1}] #{1})))
(is (= [#{2 3} #{2} #{1} #{1}] (clean-row  [#{1 2 3} #{1 2} #{1} #{1}] #{1})))
(is (= [#{1 2 3} #{2} #{1}] (clean-row  [#{1 2 3} #{2} #{1}] #{7})))
  )

;7)clean-mtx-for-el-in-row

(deftest test-clean-mtx-for-el-in-row
(is (= [[#{1 2 3} #{2} #{1}] [#{1} #{2 3} #{2}]] (clean-mtx-for-el-in-row [[#{1 2 3} #{2} #{1}] [#{1} #{1 2 3} #{1 2}]] 2 #{1})))
  )

;8)get-column

(deftest test-get-column
(is (= [#{2} #{1 2 3}] (get-column [[#{1 2 3} #{2} #{1}] [#{1} #{1 2 3} #{1 2}]] 2)))
  )

;9)clean-column

(deftest test-clean-column
(is (= [#{1} #{1 3} #{1}] (clean-column [#{1} #{1 2 3} #{1 2}] #{2})))
  )

;10)set-element-in-row
(deftest test-set-element-in-row
(is (= '(#{1} #{7} #{1 2}) (set-element-in-row [#{1} #{1 2 3} #{1 2}] #{7} 2)))
  )

;11)clean-mtx-for-el-in-column
(deftest test-clean-mtx-for-el-in-column
(is (= '((#{1 2} #{1}) (#{1 2} #{2 3})) (clean-mtx-for-el-in-column [[#{1 2} #{1}] [#{1 2} #{1 2 3}]] #{1} 2)))
  )

;12) clean-row-of-square
(deftest test-clean-row-of-square
(is (= '(#{4 5} #{4} #{3} #{8} #{3 4}) (clean-row-of-square [#{3 4 5} #{4} #{3} #{8} #{3 4} ] 1 #{3} 1)))
  )

;13) remove-from-square
(deftest test-remove-from-square
(is (= [[#{1} #{4} #{3} #{1} #{1 4 5} #{1} #{5} #{2} #{7}]
        [#{4 5} #{2} #{3} #{1} #{1 2} #{1 3} #{2} #{9} #{8}]
        [#{3 5} #{2} #{6} #{1} #{2} #{9} #{8} #{1 2} #{1 3}]
        [#{1 2} #{1 3} #{1 2} #{1} #{2} #{9} #{8} #{2} #{9}]]
       (remove-from-square [[#{1} #{4 1} #{3 1} #{1} #{1 4 5} #{1} #{5} #{2} #{7}]
                     [#{1 4 5} #{1 2} #{1 3} #{1} #{1 2} #{1 3} #{2} #{9} #{8}]
                     [#{3 1 5} #{1 2} #{1 6} #{1} #{2} #{9} #{8} #{1 2} #{1 3}]
                     [#{1 2} #{1 3} #{1 2} #{1} #{2} #{9} #{8} #{2} #{9}]]
                    #{1} 1 1)))
  )

;14) solve-part1
 (deftest test-solve-part1-test
(is (= [[#{3 7 8 9} #{2} #{5} #{3 7 8 9} #{3 6 8 9} #{1} #{4 7 8 9} #{3 4 7 8} #{4 6 7 8}] [#{1} #{3 7} #{4} #{2} #{5} #{3 6 7 9} #{7 8 9} #{3 7 8} #{6 7 8}] [#{3 7 8 9} #{3 7} #{6} #{3 7 8 9} #{3 8 9} #{4} #{2} #{1} #{5 7 8}] [#{4 9} #{5} #{9} #{1 4 7 8 9} #{1 4 6 8 9} #{6 7 9} #{3} #{2} #{1 4 7 8}] [#{6} #{1 3 4} #{3} #{1 3 4 7 8} #{2} #{3 5 7} #{4 7 8} #{4 5 7 8} #{9}] [#{2 3 4 9} #{8} #{7} #{1 3 4 9} #{1 3 4 9} #{3 5 9} #{4} #{6} #{1 4 5}] [#{2 3 4 7 8} #{9} #{1} #{5} #{3 4} #{2 3} #{6} #{4 7 8} #{2 4 7 8}] [#{2 4 5} #{4 6} #{2} #{4 9} #{7} #{8} #{1} #{4} #{3}] [#{2 3 4 7 8} #{3 4 7} #{2 3 8} #{6} #{1 3 4} #{2 3} #{5} #{9} #{2 4 7 8}]]
 (solve-part1-test [[0 2 5 0 0 1 0 0 0]
         [1 0 4 2 5 0 0 0 0]
         [0 0 6 0 0 4 2 1 0]
         [0 5 0 0 0 0 3 2 0]
         [6 0 0 0 2 0 0 0 9]
         [0 8 7 0 0 0 0 6 0]
         [0 9 1 5 0 0 6 0 0]
         [0 0 0 0 7 8 1 0 3]
         [0 0 0 6 0 0 5 9 0]

         ]))) ;Example from courses

   (is (= [[#{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9}] [#{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9}] [#{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9}] [#{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9}] [#{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9}] [#{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9}] [#{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9}] [#{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9}] [#{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9} #{1 2 3 4 5 6 7 8 9}]]
         (solve-part1-test [[0 0 0 0 0 0 0 0 0]
         [0 0 0 0 0 0 0 0 0]
         [0 0 0 0 0 0 0 0 0]
         [0 0 0 0 0 0 0 0 0]
         [0 0 0 0 0 0 0 0 0]
         [0 0 0 0 0 0 0 0 0]
         [0 0 0 0 0 0 0 0 0]
         [0 0 0 0 0 0 0 0 0]
         [0 0 0 0 0 0 0 0 0]

         ]))) ;All possible solutions

   (is (= [[#{5} #{8} #{1} #{6} #{7} #{2} #{4} #{3} #{9}] [#{7} #{9} #{2} #{8} #{4} #{3} #{6} #{5} #{1}] [#{3} #{6} #{4} #{5} #{9} #{1} #{7} #{8} #{2}] [#{4} #{3} #{8} #{9} #{5} #{7} #{2} #{1} #{6}] [#{2} #{5} #{6} #{1} #{8} #{4} #{9} #{7} #{3}] [#{1} #{7} #{9} #{3} #{2} #{6} #{8} #{4} #{5}] [#{8} #{4} #{5} #{2} #{1} #{9} #{3} #{6} #{7}] [#{9} #{1} #{3} #{7} #{6} #{8} #{5} #{2} #{4}] [#{6} #{2} #{7} #{4} #{3} #{5} #{1} #{9} #{8}]]
             (solve-part1-test [[5 8 1 6 7 2 4 3 9]
                      [7 9 2 8 4 3 6 5 1]
                      [3 6 4 5 9 1 7 8 2]
                      [4 3 8 9 5 7 2 1 6]
                      [2 5 6 1 8 4 9 7 3]
                      [1 7 9 3 2 6 8 4 5]
                      [8 4 5 2 1 9 3 6 7]
                      [9 1 3 7 6 8 5 2 4]
                      [6 2 7 4 3 5 1 9 8]

         ]))) ;Solved sudoku, every position should have 1 element
   (is (= [[#{5} #{8} #{1} #{6} #{7} #{2} #{4} #{3} #{9}] [#{7} #{9} #{2} #{8} #{4} #{3} #{6} #{5} #{1}] [#{3} #{6} #{4} #{5} #{9} #{1} #{7} #{8} #{2}] [#{4} #{3} #{8} #{9} #{5} #{7} #{2} #{1} #{6}] [#{2} #{5} #{6} #{1} #{8} #{4} #{9} #{7} #{3}] [#{1} #{7} #{9} #{3} #{2} #{6} #{8} #{4} #{5}] [#{8} #{4} #{5} #{2} #{1} #{9} #{3} #{6} #{7}] [#{9} #{1} #{3} #{7} #{6} #{8} #{5} #{2} #{4}] [#{6} #{2} #{7} #{4} #{3} #{5} #{1} #{9} #{8}]]
        (solve-part1-test [[0 8 1 6 7 2 4 3 0]
                      [7 9 2 8 4 3 6 5 1]
                      [3 6 4 5 9 1 7 8 2]
                      [4 3 8 9 5 7 2 1 6]
                      [2 5 6 1 8 4 9 7 3]
                      [1 7 9 3 2 6 8 4 5]
                      [8 4 5 2 1 9 3 6 7]
                      [9 1 3 7 6 8 5 2 4]
                      [0 2 7 4 3 5 1 9 0]

         ]))) ;zeros in corners
   (is (= [[#{5} #{8} #{1} #{6} #{7} #{2} #{4} #{3} #{9}] [#{7} #{9} #{2} #{8} #{4} #{3} #{6} #{5} #{1}] [#{3} #{6} #{4} #{5} #{9} #{1} #{7} #{8} #{2}] [#{4} #{3} #{8} #{9} #{5} #{7} #{2} #{1} #{6}] [#{2} #{5} #{6} #{1} #{8} #{4} #{9} #{7} #{3}] [#{1} #{7} #{9} #{3} #{2} #{6} #{8} #{4} #{5}] [#{8} #{4} #{5} #{2} #{1} #{9} #{3} #{6} #{7}] [#{9} #{1} #{3} #{7} #{6} #{8} #{5} #{2} #{4}] [#{6} #{2} #{7} #{4} #{3} #{5} #{1} #{9} #{8}]]
          (solve-part1-test [[0 0 0 0 0 0 0 0 0]
                      [7 9 2 8 4 3 6 5 1]
                      [3 6 4 5 9 1 7 8 2]
                      [4 3 8 9 5 7 2 1 6]
                      [2 5 6 1 8 4 9 7 3]
                      [1 7 9 3 2 6 8 4 5]
                      [8 4 5 2 1 9 3 6 7]
                      [9 1 3 7 6 8 5 2 4]
                      [6 2 7 4 3 5 1 9 8]

         ]))) ;zeros row

   (is (= [[#{5} #{8} #{1} #{6} #{7} #{2} #{4} #{3} #{9}] [#{7} #{9} #{2} #{8} #{4} #{3} #{6} #{5} #{1}] [#{3} #{6} #{4} #{5} #{9} #{1} #{7} #{8} #{2}] [#{4} #{3} #{8} #{9} #{5} #{7} #{2} #{1} #{6}] [#{2} #{5} #{6} #{1} #{8} #{4} #{9} #{7} #{3}] [#{1} #{7} #{9} #{3} #{2} #{6} #{8} #{4} #{5}] [#{8} #{4} #{5} #{2} #{1} #{9} #{3} #{6} #{7}] [#{9} #{1} #{3} #{7} #{6} #{8} #{5} #{2} #{4}] [#{6} #{2} #{7} #{4} #{3} #{5} #{1} #{9} #{8}]]
           (solve-part1-test [[0 8 1 6 7 2 4 3 9]
                      [0 9 2 8 4 3 6 5 1]
                      [0 6 4 5 9 1 7 8 2]
                      [0 3 8 9 5 7 2 1 6]
                      [0 5 6 1 8 4 9 7 3]
                      [0 7 9 3 2 6 8 4 5]
                      [0 4 5 2 1 9 3 6 7]
                      [0 1 3 7 6 8 5 2 4]
                      [0 2 7 4 3 5 1 9 8]

         ]))) ;zeros column

   (is (= [[#{1 3 5 7 8} #{8} #{1} #{6} #{7} #{2} #{4} #{3} #{9}] [#{7} #{9} #{2} #{8} #{4} #{3} #{6} #{5} #{1}] [#{3} #{6} #{4} #{5} #{9} #{1} #{7} #{8} #{2}] [#{4} #{3} #{8} #{9} #{5} #{7} #{2} #{1} #{6}] [#{2} #{5} #{6} #{1} #{8} #{4} #{9} #{7} #{3}] [#{1} #{7} #{9} #{3} #{2} #{6} #{8} #{4} #{5}] [#{8} #{4} #{5} #{2} #{1} #{9} #{3} #{6} #{7}] [#{9} #{1} #{3} #{7} #{6} #{8} #{5} #{2} #{4}] [#{6} #{2} #{7} #{4} #{3} #{5} #{1} #{9} #{8}]]
           (solve-part1-test [[0 0 0 0 0 0 0 0 0]
                           [0 9 2 8 4 3 6 5 1]
                           [0 6 4 5 9 1 7 8 2]
                           [0 3 8 9 5 7 2 1 6]
                           [0 5 6 1 8 4 9 7 3]
                           [0 7 9 3 2 6 8 4 5]
                           [0 4 5 2 1 9 3 6 7]
                           [0 1 3 7 6 8 5 2 4]
                           [0 2 7 4 3 5 1 9 8]

         ])))
  )

;14) get-square
(deftest test-get-square
(is (= '(#{6} #{4 7 8} #{2 4 7 8} #{1} #{4} #{3} #{5} #{9} #{2 4 7 8}) (get-square [[#{3 7 8 9} #{2} #{5} #{3 7 8 9} #{3 6 8 9} #{1} #{4 7 8 9} #{3 4 7 8} #{4 6 7 8}]
             [#{1} #{3 7} #{4} #{2} #{5} #{3 6 7 9} #{7 8 9} #{3 7 8} #{6 7 8}]
             [#{3 7 8 9} #{3 7} #{6} #{3 7 8 9} #{3 8 9} #{4} #{2} #{1} #{5 7 8}]
             [#{4 9} #{5} #{9} #{1 4 7 8 9} #{1 4 6 8 9} #{6 7 9} #{3} #{2} #{1 4 7 8}]
             [#{6} #{1 3 4} #{3} #{1 3 4 7 8} #{2} #{3 5 7} #{4 7 8} #{4 5 7 8} #{9}]
             [#{2 3 4 9} #{8} #{7} #{1 3 4 9} #{1 3 4 9} #{3 5 9} #{4} #{6} #{1 4 5}]
             [#{2 3 4 7 8} #{9} #{1} #{5} #{3 4} #{2 3} #{6} #{4 7 8} #{2 4 7 8}]
             [#{2 4 5} #{4 6} #{2} #{4 9} #{7} #{8} #{1} #{4} #{3}]
             [#{2 3 4 7 8} #{3 4 7} #{2 3 8} #{6} #{1 3 4} #{2 3} #{5} #{9} #{2 4 7 8}]
             ]
            9))))

;15) is-unique
(deftest test-is-unique
(is (= nil  (is-unique [[#{3 7 8 9} #{2} #{5 2} #{3 7 8 9} #{3 6 8 9} #{7} #{4 7 8 9} #{3 4 7 8} #{4 6 7 8}]
             [#{5} #{3 7} #{4} #{2} #{5} #{3 6 7 9} #{7 8 9} #{3 7 8} #{6 7 8}]] 2 1 2 1) ));Is the value 2 unique in row=1, col=2 and square=1? Returns nil because of the row
(is (= nil (is-unique [[#{3 7 8 9} #{2}     #{5} #{3 7 8 9} #{3 6 8 9} #{7} #{4 7 8 9} #{3 4 7 8} #{4 6 7 8}]
             [#{5}       #{2 3 7} #{4} #{2} #{5} #{3 6 7 9} #{7 8 9} #{3 7 8} #{6 7 8}]] 2 1 2 1))) ;Is the value 2 unique in row=1, col=2 and square=1? Returns nil because of the col
(is (= nil  (is-unique [[#{3 7 8 9} #{2}     #{5} #{3 7 8 9} #{3 6 8 9} #{7} #{4 7 8 9} #{3 4 7 8} #{4 6 7 8}]
             [#{2 5}       #{3 7} #{4} #{2} #{5} #{3 6 7 9} #{7 8 9} #{3 7 8} #{6 7 8}]] 2 1 2 1)))  ;Is the value 2 unique in row=1, col=2 and square=1? Returns nil because of the square
(is (= true (is-unique [[#{3} #{2} #{5}] [#{1} #{7} #{4}] [#{7 8 9} #{7} #{6}]] 9 3 1 1)))  ;Is the value 9 unique in row=3, col=1 and square=1? TRUE.
  )

;16) set-element-in-matrix
(deftest test-set-element-in-matrix
(is (= '([#{3 7 8} #{2} #{5}] [#{1} #{7} #{4}] [#{8} #{7} #{6}]) (set-element-in-matrix  [[#{3 7 8} #{2} #{5} ]
                         [#{1} #{7} #{4}]
                         [#{7 8 9} #{7} #{6} ]] #{8} 3 1) )) ;Set #{8} in row=3 col=1
)

;17)has-unique
(deftest test-has-unique
(is (= #{3} (has-unique [[#{3 7 8 9} #{2} #{5} ]
             [#{1} #{7} #{4}]
             [#{7 8 9} #{7} #{6} ]] #{3 7 8 9} 1 1 1))) ; Return unique value of the element #{3 7 8 9} which is in row=1 col=1 square=1
)

;18)solve-part2
(deftest test-solve-part2
(is (= [[#{3 7 8 9} #{2} #{5} #{3 7 8 9} #{3 6 8 9} #{1} #{4 7 8 9} #{3 4 7 8} #{4 6 7 8}]
        [#{1} #{3 7} #{4} #{2} #{5} #{3 6 7 9} #{7 8 9} #{3 7 8} #{6 7 8}]
        [#{3 7 8 9} #{3 7} #{6} #{3 7 8 9} #{3 8 9} #{4} #{2} #{1} #{5 7 8}]
        [#{4 9} #{5} #{9} #{1 4 7 8 9} #{1 4 6 8 9} #{6 7 9} #{3} #{2} #{1 4 7 8}]
        [#{6} #{1 3 4} #{3} #{1 3 4 7 8} #{2} #{3 5 7} #{4 7 8} #{4 5 7 8} #{9}]
        [#{2 3 4 9} #{8} #{7} #{1 3 4 9} #{1 3 4 9} #{3 5 9} #{4} #{6} #{1 4 5}]
        [#{2 3 4 7 8} #{9} #{1} #{5} #{3 4} #{2 3} #{6} #{4 7 8} #{2 4 7 8}]
        [#{2 4 5} #{4 6} #{2} #{4 9} #{7} #{8} #{1} #{4} #{3}]
        [#{2 3 4 7 8} #{3 4 7} #{2 3 8} #{6} #{1 3 4} #{2 3} #{5} #{9} #{2 4 7 8}]]
  (solve-part2 [[#{3 7 8 9} #{2} #{5}      #{3 7 8 9} #{3 6 8 9} #{1}           #{4 7 8 9} #{3 4 7 8} #{4 6 7 8}]
               [#{1} #{3 7} #{4}         #{2} #{5} #{3 6 7 9}                 #{7 8 9} #{3 7 8} #{6 7 8}]
               [#{3 7 8 9} #{3 7} #{6}   #{3 7 8 9} #{3 8 9} #{4}             #{2} #{1} #{5 7 8}]
               [#{4 9} #{5} #{9}         #{1 4 7 8 9} #{1 4 6 8 9} #{6 7 9}   #{3} #{2} #{1 4 7 8}]
               [#{6} #{1 3 4} #{3}       #{1 3 4 7 8} #{2} #{3 5 7}           #{4 7 8} #{4 5 7 8} #{9}]
               [#{2 3 4 9} #{8} #{7}     #{1 3 4 9} #{1 3 4 9} #{3 5 9}       #{4} #{6} #{1 4 5}]
               [#{2 3 4 7 8} #{9} #{1}   #{5} #{3 4} #{2 3}                   #{6} #{4 7 8} #{2 4 7 8}]
               [#{2 4 5} #{4 6} #{2}     #{4 9} #{7} #{8}                     #{1} #{4} #{3}]
               [#{2 3 4 7 8} #{3 4 7} #{2 3 8} #{6} #{1 3 4} #{2 3}           #{5} #{9} #{2 4 7 8}]]))) ;example from courses
  (is (= '([#{3} #{2} #{5}] [#{1} #{7} #{4}] [#{8} #{7} #{6}]))
      (solve-part2  [[#{3 7 8} #{2} #{5} ]
                     [#{1} #{7} #{4}]
                     [#{7 8 9} #{7} #{6} ]] )) ;3 from element on position (1,1) is unique. After 3 is set, 8 is removed and consequently 8 in unique on position (3,1)
  (is (= '([#{3 7 8} #{2} #{5}] [#{1} #{7} #{4}] [#{7 8 9} #{7} #{6}]))
      (solve-part2  [[#{3 7 8} #{2} #{5} ]
                     [#{1 3} #{7} #{4}]
                     [#{7 8 9} #{7} #{6} ]] )) ;now 3 from element on position (1,1) is NOT unique. But 1 from (2,1) is!
  (is (= [[#{3 7 8} #{3 7 8} #{3}] [#{3 7 8} #{7} #{4}] [#{7 8 9} #{7} #{9}]]
      (solve-part2  [[#{3 7 8} #{3 7 8} #{3} ]
                     [#{3 7 8} #{7} #{4}]
                     [#{7 8 9} #{7} #{9} ]] )) ;no uniques

  ))

;19)SOLVE
(deftest test-solve
(is (= (transform [[8 7 5 9 2 1 3 4 6]
        [3 6 1 7 5 4 8 9 2]
        [2 4 9 8 6 3 7 1 5]
        [5 8 4 6 9 7 1 2 3]
        [7 1 3 2 4 8 6 5 9]
        [9 2 6 1 3 5 4 8 7]
        [6 9 7 4 1 2 5 3 8]
        [1 5 8 3 7 9 2 6 4]
        [4 3 2 5 8 6 9 7 1]]) (solve [[0 7 0 0 2 0 0 4 6]
        [0 6 0 0 0 0 8 9 0]
        [2 0 0 8 0 0 7 1 5]
        [0 8 4 0 9 7 0 0 0]
        [7 1 0 0 0 0 0 5 9]
        [0 0 0 1 3 0 4 8 0]
        [6 9 7 0 0 2 0 0 8]
        [0 5 8 0 0 0 0 6 0]
        [4 3 0 0 8 0 0 7 0]]))) ; Full solution provided
  (is (= [[#{3 7 8 9} #{2} #{5} #{3 7 8} #{3 6 8 9} #{1} #{7 8 9} #{3 7 8} #{4 6 7 8}]
          [#{1} #{3 7} #{4} #{2} #{5} #{3 6 7 9} #{7 8 9} #{3 7 8} #{6 7 8}]
          [#{3 7 8 9} #{3 7} #{6} #{3 7 8} #{3 8 9} #{4} #{2} #{1} #{5 7 8}]
          [#{4} #{5} #{9} #{1 7 8} #{1 6 8} #{6 7} #{3} #{2} #{1 7 8}]
          [#{6} #{1} #{3} #{4 7 8} #{2} #{5 7} #{7 8} #{5 7 8} #{9}]
          [#{2} #{8} #{7} #{1 3} #{1 3 9} #{3 5 9} #{4} #{6} #{1 5}]
          [#{3 7} #{9} #{1} #{5} #{3 4} #{2 3} #{6} #{7 8} #{2 7 8}]
          [#{5} #{6} #{2} #{9} #{7} #{8} #{1} #{4} #{3}]
          [#{3 7} #{3 4 7} #{8} #{6} #{1 3 4} #{2 3} #{5} #{9} #{2 7}]]
         (solve [[0 2 5 0 0 1 0 0 0]
         [1 0 4 2 5 0 0 0 0]
         [0 0 6 0 0 4 2 1 0]
         [0 5 0 0 0 0 3 2 0]
         [6 0 0 0 2 0 0 0 9]
         [0 8 7 0 0 0 0 6 0]
         [0 9 1 5 0 0 6 0 0]
         [0 0 0 0 7 8 1 0 3]
         [0 0 0 6 0 0 5 9 0]]))) ;Courses example; no more transformations are possible
  )
(run-tests)
